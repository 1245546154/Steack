分布式应用程序协调服务



zookeeper中的三种角色

Leader：唯一一个领队，负责读和写，同步所有Follower

Follower：提供读服务（follower做修改也可同步到集群内）
Observer：负担Follower的读请求（不参与竞选）


ZooKeeper 具备心跳检测，可以设置一个客户端回话的超时时间
当服务器出现故障的时候，只要在超时时间内重新连接上一个新的服务器，之前创建的会话依然有效。


正常需要奇数的集群数量3/6/9


2888集群内通讯  
3888集群内选举
2181对外的服务端口（默认）






环境部署：
kafka-node1:
kafka-node2:

――――――――――――――――――――――――――――――――――――――――――――――――――――
kafka-node1:


tar xf zookeeper-3.4.13.tar.gz
mv zookeeper-3.4.13 /usr/local/zookeeper

cd /usr/local/zookeeper/
mkdir data
cd conf
cp zoo_sample.cfg zoo.cfg



vim zoo.cfg

dataDir=/usr/local/zookeeper/data
server.1=192.168.23.20:2888:3888                 #2888为选举端口
server.2=192.168.23.16:2888:3888                 #2888和3888都需要写出来  最后最后添加


mkdir /usr/local/zookeeper/data
echo "1" >> /usr/local/zookeeper/data/myid       #添加选举参数

                 
/usr/local/zookeeper/bin/zkServer.sh start
/usr/local/zookeeper/bin/zkServer.sh stop
/usr/local/zookeeper/bin/zkServer.sh status

netstat -lntp | grep java                        #follower会占用2888端口来进行选举

Mode: follower   #即为配置成功

或者启动脚本到init.d
――――――――――――――――――――――――――――――――――――――――――――――――――――

#!/bin/bash
# chkconfig: 2345 10 90
. /etc/rc.d/init.d/functions
case "$1" in start)
/usr/local/zookeeper/bin/zkServer.sh start
;;
stop)
/usr/local/zookeeper/bin/zkServer.sh stop
;;
restart)
/usr/local/zookeeper/bin/zkServer.sh stop
sleep 1 #暂停一秒
/usr/local/zookeeper/bin/zkServer.sh start
;;
*)
echo "Usage: \$0 {start|stop|status|restart}"
esac
exit 0



――――――――――――――――――――――――――――――――――――――――――――――――――――
kafka-node2:


tar xf zookeeper-3.4.13.tar.gz
mv zookeeper-3.4.13 /usr/local/zookeeper

cd /usr/local/zookeeper/
mkdir data
cd conf
cp zoo_sample.cfg zoo.cfg



vim zoo.cfg                                      #node1和node2的配置文件相同

dataDir=/usr/local/zookeeper/data
server.1=192.168.23.20:2888:3888                 #2888为选举端口
server.2=192.168.23.16:2888:3888                 #2888和3888都需要写出来



mkdir /usr/local/zookeeper/data
echo "1" >> /usr/local/zookeeper/data/myid       #添加选举参数

                 
/usr/local/zookeeper/bin/zkServer.sh start
/usr/local/zookeeper/bin/zkServer.sh stop
/usr/local/zookeeper/bin/zkServer.sh status


Mode: leader   #即为配置成功


或者启动脚本到init.d
――――――――――――――――――――――――――――――――――――――――――――――――――――

#!/bin/bash
# chkconfig: 2345 10 90
. /etc/rc.d/init.d/functions
case "$1" in start)
/usr/local/zookeeper/bin/zkServer.sh start
;;
stop)
/usr/local/zookeeper/bin/zkServer.sh stop
;;
restart)
/usr/local/zookeeper/bin/zkServer.sh stop
sleep 1 #暂停一秒
/usr/local/zookeeper/bin/zkServer.sh start
;;
*)
echo "Usage: \$0 {start|stop|status|restart}"
esac
exit 0







