#!/usr/bin/python（shell < which pyth显示的路径）,下面要写的所有代码的解释工具,解释器就是翻译器
#_*_ coding:utf-8 _*_  （字符编码方式）字符编码越长占用的字符空间越多  可编程的字符编码（python3.6以上自动识别）

python里面不能直接调用其他文件，不能直接编译其他文件。

（SyntaxError:语法错误）
（indentaivonError:缩进错误）
（nameerror:名称未指定错误）
（typeerror:类型错误）
（valueerror:值错误）
（indexerror:索引越界）


字符串变量的操作方法
变量名.          #（加点之后就会显示所有可以执行的操作方法） 

例：
变量.upper   #（使定义的变量变成大写）

变量是用来保存变化的数值的，命名是为了好调用。

keyword           （关键字）
keyword.iskeyword （判断关键字）
keyword.kwlist    （）

条件执行
顺序执行

str1.count    （计算字符个数）
str1[-1]      （取倒数第一个值）
strl[3]       （取正数第三个值）
str1[0:2]     （切片要比索引的字符大一位） 例 abcd 取a和b ←  
str1[0:3:2]   （0到第3位，取布长2的字符，）
str1[0:::3]   （字符串切片）
str1[-1:-4:-1]（字符串切面后面布长的正负号代表了取切片的方向） 

word="this is a test"
str1.split()[0] （输出第一个字符串）



（应聘吹牛法则：看看监控，写写配置文档，配合一下开发或者测试上线个项目什么的。）

全局变量：
局部变量：

必选参数：必须输入的参数。
可变参数：传入的参数是可变的（在参数前面加一个*号）
位置参数：
默认参数：设定初始默认的值
形式参数：
关键词参数：可以传0个或者多个带关键字参数个数的命令（在参数前面加两个**号）
命名关键字参数：对于关键字参数，函数的调用者可以传入任意不受限制的关键字参数，至于到底传输了哪些，就需要在函数内部通过wk检查。



如果直接调用函数名要加小括号，  如果赋值给一个变量的话可以不用加括号

python里面语句的颗粒度要小。
函数的颗粒度要比语句的颗粒度要大。



模块都是一些人写好的模块，直接导入即可，如果不导入的话，没办法使用。
命名出现错误的情况除外。
import mod_test1   #直接加模块文件名（不加后缀岂可） 注：需要在同一个目录内
touch __init__.py  #创建库包 在此包下的文件都可以作为模块
mkdir devops       #子包  


先安装导入在写程序 psutil shutil  paramiko模块


import aaaa    #创建一个.py的模块，然后再当前目录下直接调用模块

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

import sys                                            #最常用的系统模块
sys.path.append("/usr/local/python366/file/root/")    #追加文件目录到这个文件的列表里
from bbbb import aaaa                                 #调用其它目录下的模块（bbbb为文件夹（注意目录位置）

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

sys.path.append("/usr/local/python366/file/root/bbbb")   #追加文件目录到这个文件的列表里完整路径
import aaaa   #直接调用脚本  

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


#两种导入模块方式
import sys,os
from random import choice 
l = ['tom','jim','abc']
print(choice(1))


import random
l = ['tom','jim','abc']
print (random.choice(1))


windows --->pycharm(远程解释器)
windows --->git,github


if __name__ == '__main__'    #调用函数的时候以下都不执行，不调用函数的时候正常使用。

Python len()            #计算（字符、列表、元组等）长度或项目个数。

-------------------------------------------------------------------------------------------------------

装饰器

