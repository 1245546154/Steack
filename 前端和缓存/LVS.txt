LVS和其他开源软件只要编译到内核中就可以使用

ipvsadmin工作在用户空间，定义集群，可以让用户书写规则，通过系统调用到内核空间的ipvs



nginx，LVS，HAproxy工作在传输层 

HAproxy理论最大承受并发连接为65535个，实际最大能到30000就差不多了，工作在传输层和应用层，可以用于前端和后端

LVS可以突破传统的套接字的范围，可以支持400W到500W个并发请求的连接数

并发量达不到十万百万加的并发请求，根本用不到LVS

每天千和万级的并发请求使用HAproxy和nginx就可以了，因为大部分都在CDN和云缓存过滤掉了



――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
LVS的缺点：（性能很好，功能弱）
1.功能比较简单，支持复杂应用的负载均衡能力较差，如算法较少等；
2.开启隧道方式需重编译内核；
3.配置复杂；
4.无法适用与windows平台
5.扩展性有限









LVS：（linux虚拟化服务器） 

LVS集群架构的优点
1.性能：
2.性能/价格比：
3.可伸缩性：
4.高可用性：
5.管理性：

在设计时需要考虑系统的透明性、可伸缩性、高可用性和易管理性。









集群采用三层结构：
1.服务器池：所有真实的服务器机群划分为一个整体。
2.负载调度器：提供给用户进行访问的虚拟IP地址，原理与VRRP一样
3.共享存储：它为服务器池提供一个共享的存储区，所有服务器拥有相同的内容，可以相同的服务。


当整个系统受到的负载超过目前所有结点的处理能力时，可以在服务器池中增加服务器来满足不断增长的请求负载。



LVS+keepalived的基础之上升级的架构为LVS+OSPF（把linux插入到OSPF的路由表里去）

ECMP（等价多路径）：而等值多路径路由协议可以在该网络环境下同时使用多条链路

WCMP（加权多路径）：能够非常灵活地按照比例在链路上传递流量。



――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
LVS 负载均衡：
VS/FULLNAT: 基于网络地址转换，即修改请求报文的源地址，又修改请求报文的目标地址
VS/NAT：基于网络地址转换，修改请求报文的目标地址
VS/TUN：基于隧道，包被IPIP封装,然后被转发到RS
VS/DR：基于直接路由，包上的MAC地址被更改,然后被转发到RS


4种工作方式11种调度算法



############################################################


NAT模式：（多目标的目标地址转换）
一块网卡面向公网
一块网卡面向内部所有的RS


RS和director都必须使用私有地址，免于外网用户直接访问到内部网络



入站：
客户端发送包含源地址CIP和目标地址的VIP的报文包给director
director将目标地址VIP修改为RIP1，如果是下一条则修改为RIP2

通过修改请求报文的目标IP地址（同时可能会修改目标端口）至挑选出来的某RS的RIP地址，实现转发


出站：
回应的报文，目标地址是CIP影响报文时VIP，经过director返回给客户端



1.可以做端口映射
2.请求和相应报文都要经过director转发（极高负载场景下：高负载的情况会出现性能瓶颈）
3.RS和director都必须使用私有地址，且RS的网关要指向director
4.RS和director必须在同一个IP网络中（否则无法指定网关）
5.RS可以使用任意系统

############################################################


FULLNAT模式（SNAT和DNAT转换）

director修改请求报文的源地址，又修改请求报文的目标地址
director将源地址修改为DIP，将目标地址修改为RIP，响应给DIP

VIP是公网地址，RIP和DIP是私有地址二者无需在同一网络中

RS接受到的请求报文的源地址是DIP，因此要相应给DIP
请求报文和响应包都要经过director
支持端口映射机制
RS的OS可以是任何系统

1.centos6不支持fullnat的内核。需要支持IPVS的FULLNAT开发代码
2.可以跨机房，不需要在同一网络中


############################################################


TUN模式：IPIP（IP隧道）多用于跨物理网络，跨网段的场景
1.IP头部的分装机制。源地址是CIP目标地址是VIP，到director之后
2.将RS的IP封装在这个包的外面，源地址就变成了DIP目标地址就是变成了RIP
3.转RS
4.到达真实数据库之后
5.LO接口上的RIP与接收到的包的rip作比较，匹配之后进行处理。


入站：
director就是对请求进行分发和调度，给RS直接响应给客户端就可以。

出站：
封装一个相应VIP报文，内有LO的别名，经过物理网卡通过互联网到达客户端


确保director和RS可以承载最大的MTU报文数量（1500）
MTU：最大传输单元 

1.TUN不支持端口映射
2.RIP,DIP，VIP全部都要是公网地址
3.请求报文必须经过director调度，相应报文必须不能经过director
4.RS的网关不能指向DIP
5.RS的OS必须支持隧道功能


############################################################


DR模式：通过该请求报文的目标MAC地址进行转发

ARP：地址解析协议（将IP转换为mac地址）

封装源MAC和目标MAC给指定的RS


director配置VIP 客户端请求VIP，路由器做ARP广播，广播将VIP交给director，director挑一个RS进行响应

每一个RS都必须有RIP和VIP
director还要有DIP和VIP


源目标是CIP目标是VIP，director挑选一个RS，得到一个RS地址，做ARP广播，将RS的MAC封装到报文里，然后将报文返回到交换机，交换机做广播，将新的MAC报文广播给对应的RS，RS接受到之后做相应。

##DR模式下：添加一个虚拟网卡给VIP，在回环地址上绑定一个新的网卡用作VIP，而不能使用RS的RIP##

可以使用静态绑定，使路由器将目标IP为VIP的请求报文发送给director


1.每一个RS都可以用CIP做地址，返回给客户端 
2.RS的网关绝对不能直接指向director
3.RS，director要在同一个物理网路中，需要接受到ARP广播
4.RS的RIP可以使用私有地址，也可以使用公有地址
5.请求报文经过director调度，但相应报文绝对不能经过director
6.不支持端口映射
7.RS支持大部分系统


