RAC架构：实时应用集群，是高可用性的一种，也是Oracle数据库支持网格计算环境的核心技术。

##RAC的功能作用##
(1)多节点负载均衡;
(2)提供高可用：故障容错和无缝切换功能，将硬件和软件错误造成的影响最小化;
(3)通过并行执行技术提高事务响应时间----通常用于数据分析系统;
(4)通过横向扩展提高每秒交易数和连接数----通常对于联机事务系统;
(5)节约硬件成本，可以用多个廉价PC服务器代替昂贵的小型机或大型机，同时节约相应维护成本;
(6)可扩展性好，可以方便添加删除节点，扩展硬件资源。




单节点数据库，如果实例宕机了，如果一个业务链接在实例上面，那么这个业务就中断了。这个时候系统就不具有可用性了，那么这个时候单节点的可用性是很差的。



##RAC优点##
对于RAC来说，和单实例一样，还是一份数据文件，都是相同的存储上面放着oracle的文件，但是是由三个实例共用同一份数据文件。这样的好处是在三个实例之间做了冗余，在上面三个实例当中任意两个坏了业务都可以链接到剩下的一个实例，都可以正常的工作。

RAC提供了在实例级别的冗余。



##RAC弊端##
RAC不能够解决在数据的安全，尽管有多个实例，但是只有一份数据文件，这样只要源数据文件损坏了，那么整个数据库就损坏了。

(1)相对单机，管理更复杂，要求更高;
(2)在系统规划设计较差时性能甚至不如单节点;
(3)可能会增加软件成本(如果使用高配置的pc服务器，Oracle一般按照CPU个数收费)。





在RAC里面，最重要的就是实例和实例之间的交互，即使是分离的实例。
但是读取的数据是相同的，RAC不是分布式的系统，因为它只有一个存储。

分布式系统是指数据发布在不同的数据库上面，然后通过中间件来协调做查询。
RAC还是一台数据库，支持多个实例。

――――――――――――――――――――――――――――――――――――――――――――――――――――――

RAC至少有两套网络，一个是实例之间的数据的传递，另外一个是公有网络，是对外提供服务的，外面的业务是提供公有网络的IP链接到数据库的。

















